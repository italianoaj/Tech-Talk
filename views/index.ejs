<!DOCTYPE html>
<html>
	<head>
        <meta charset="utf-8">
        <meta name="author" content="Anthony Italiano">
        <meta name="description" content="chat room">
        <meta name="keywords" content="Hiram, College, Chat, Tech, Talk, Tech Talk, Italiano">
        
		<title>Tech Talk</title>
        
		<link rel="stylesheet" href="css/chat-style.css">
        <style>
            
            #retry{
                visibility:hidden;
                color:navy;
            }
            #chat-room{
                visibility:hidden;
            }
            #message-form{
                visibility:hidden;
            }
            #login{
                visibility:visible;
                color:navy;
            }
            #logout{
                visibility:hidden;
            }
            #admin-portal{
                visibility:hidden;
            }
            #admin{
                visibility:hidden;
            }
            #cngpsswd{
                visibility:hidden;
            }
            th{background-color: navy;
                color:darkred;}
            td{background-color:white;
                color:black;}
            th, td {padding: 5px;}
            h1{text-align:center;
                color:white;}
            
            table, th, td {
                border: 1px solid #000000;
                border-collapse: collapse;
            }
        </style>
		<script>
            //Fields
			var cr;
			var mess;
			var time;
            var req;
            var user;
            var pass;
            var retry;
            var mf;
            var login
            var permUser;
            var count;
            var logout;
            var ap;
            var admin;
            var psswd;
            var users= [];
			//Onload event
			window.onload = init;
            /**
            *This function allows for variables to be filled upon completion of the page
            *loading.
            *@author italianoaj
            **/
			function init(){
				cr=document.getElementById("chat-room");
				mess=document.getElementById("message");
                login=document.getElementById("login");
                retry=document.getElementById("retry");
                mf=document.getElementById("message-form");
				console.log(window.screen.width);
				mess.style.width=window.screen.width-30+"px";
                user=document.getElementById("username");
                pass=document.getElementById("password");
                logout=document.getElementById("logout");
                ap=document.getElementById("admin-portal");
                admin=document.getElementById("admin");
                count=0;
                psswd=document.getElementById("cngpsswd");
                welcome();
			}
//**********************REQUEST FUNCTIONS*****************************************
            /**
            *This function creates the welcome message that appears from the administrator-
            *bot when the user enters the chat-room.
            *@author italianoaj
            **/
            function welcome(){
                var suffix;
				var prefix;
				time = new Date();
				if(time.getMinutes()<10){
					prefix="0";
				}else{
					prefix="";
				}
				if(time.getHours()<12){
					suffix="am";
				}else{
					suffix="pm";
				}
                cr.innerHTML+="<div class='container darker'><p>Administrator-Bot</p><img id='admin' src='img/adminbot.jpg' alt='avatar' style='float: left; max-width: 60px; width: 100%; margin-right: 20px; border-radius: 50%;'><p>Welcome to the Chatroom!</p><span class='time-left'>"+time.getHours()+":"+prefix+time.getMinutes()+""+suffix+"</span></div>"
            }
            /**
            *This function will send a login request over to the web server.
            *@author italianoaj
            **/
            function signin(){
                req = new XMLHttpRequest();
                req.open("POST", "https://cs.hiram.edu/~italianoaj/rest/login");
                req.addEventListener("load", access);
                var obj = {"username":user.value,"password":pass.value};
                permUser=user.value;
                req.setRequestHeader("Content-Type", "application/json");
                console.log(JSON.stringify(obj));
                req.responseType="json";
                req.send(JSON.stringify(obj));
            }
            /**
            *This function sends messages to the database on the server.
            *@author italianoaj
            **/
			function send(form){
                var suffix;
                var prefix;

                time = new Date();
                if(time.getMinutes()<10){
                    prefix="0";
                }else{
                    prefix="";
                }
                if(time.getHours()<12){
                    suffix="am";
                }else{
                    suffix="pm";
                }
                var sent=time.getHours()+":"+prefix+time.getMinutes()+""+suffix;
				req=new XMLHttpRequest();
                req.open("POST", "https://cs.hiram.edu/~italianoaj/rest/sendMessage");
                req.addEventListener("load", messageSent);
                var obj = {"username":permUser, "message":mess.value, "time":sent};
                console.log(obj);
                req.setRequestHeader("Content-Type","application/json");
                req.responseType="json";
                req.send(JSON.stringify(obj));
			}
            /**
            *This function asks for messages from the server.
            *@author italianoaj
            **/
            function getMessages(){
                req=new XMLHttpRequest();
                req.open("GET", "https://cs.hiram.edu/~italianoaj/rest/messages");
                req.addEventListener("load", displayMessages);
                req.setRequestHeader("Content-Type","application/json");
                req.responseType="json";
                req.send();
            }
            
            function getAdmin(){
                req=new XMLHttpRequest();
                req.open("GET", "https://cs.hiram.edu/~italianoaj/rest/admin");
                req.addEventListener("load", showAdmin);
                req.setRequestHeader("Content-Type","application/json");
                req.responseType="json";
                req.send();
            }
            
            function delUser(){
                var numba=prompt("Please enter the number of the user you want to delete:", "-1");
                console.log(users[numba]);
                req=new XMLHttpRequest();
                req.open("DELETE", "https://cs.hiram.edu/~italianoaj/rest/users");
                req.addEventListener("load", showAdmin);
                req.setRequestHeader("Content-Type","application/json");
                var obj = {"index":numba}
                req.responseType="json";
                req.send(JSON.stringify(obj));
            }
            
            function makeUser(){
                var username=prompt("Please enter the username of the new account:", "<username>");
                var password=prompt("Please enter the password of the new account:", "<password>");
                var type=prompt("Please specify if this is an admin account. If so, type 'admin' otherwise leave as is:", "user");
                req=new XMLHttpRequest();
                req.open("POST", "https://cs.hiram.edu/~italianoaj/rest/users");
                req.addEventListener("load", showAdmin);
                req.setRequestHeader("Content-Type","application/json");
                var obj = {"username":username, "password":password, "type":type}
                req.responseType="json";
                req.send(JSON.stringify(obj));
            }
                
//**********************CALLBACK FUNCTIONS*****************************************
            /**
            *This function will display the messages recieved from the sever properly.
            *@author italianoaj
            **/
            function displayMessages(){
                if (count==req.response.testMessages.length){
                    return;
                }
                for(var i=count; i<req.response.testMessages.length; i++){
                    if(req.response.testMessages[i].username==permUser){
                        cr.innerHTML+="<div class='container'><p>"+req.response.testMessages[i].username+"</p><img id='user' src='img/user.png' alt='avatar' style='float: right; max-width: 60px; width: 100%; margin-left: 20px; border-radius: 50%;'><p>"+req.response.testMessages[i].message+"</p><span class='time-right'>"+req.response.testMessages[i].time+"</span></div>";
                        continue;
                    }else{
                        cr.innerHTML+="<div class='container darker'><p>"+req.response.testMessages[i].username+"</p><img id='user' src='img/user.png' alt='avatar' style='float: left; max-width: 60px; width: 100%; margin-right: 20px; border-radius: 50%;'><p>"+req.response.testMessages[i].message+"</p><span class='time-left'>"+req.response.testMessages[i].time+"</span></div>"
                    }
                }
                cr.scrollTop = cr.scrollHeight;
                count=req.response.testMessages.length;
            }
            /**
            *This function sets up the display of the page based on the login information.
            *@author italianoaj
            **/
            function access(){
                console.log("hello");
                if(req.response.login==true){
                    login.style.display="none";
                    retry.style.display="none";
                    cr.style.visibility="visible";
                    mf.style.visibility="visible";
                    logout.style.visibility="visible";
                    psswd.style.visibility="visible";
                    if(req.response.admin==true){
                        admin.style.visibility="visible";
                    }
                    window.setInterval(getMessages, 1000);
                }else{
                    logout.style.visibility="hidden";
                    login.style.visibility="visible";
                    retry.style.visibility="visible";
                    cr.style.visibility="hidden";
                    mf.style.visibility="hidden";
                }
            }
            /**
            *Much like my previous project, this function essentially does nothing at all.
            *However, I like to have call back functions for all of my requests for the 
            *purpose of future development. Please be gentle with this little chunk, he's
            *just a small little method, barely even 4 lines. Maybe one day he'll be a 
            *great, big, STRONG method...
            *@author italianoaj
            **/
            function messageSent(){
                console.log("got back data");
                console.log(req.response);
            }
            /**
            *This function displays the help message from the administrator-bot.
            *@author italianoaj
            **/
            function help(){
                var suffix;
				var prefix;
				time = new Date();
				if(time.getMinutes()<10){
					prefix="0";
				}else{
					prefix="";
				}
				if(time.getHours()<12){
					suffix="am";
				}else{
					suffix="pm";
				}
				cr.innerHTML+="<div class='container darker'><p>Administrator-Bot</p><img id='admin' src='img/adminbot.jpg' alt='avatar' style='float: left; max-width: 60px; width: 100%; margin-right: 20px; border-radius: 50%;'><p>You can type a message to the group in the space provided below. You can then send the message by clicking the send button. Beep-Boop-Beep *insert other helpful information here.</p><span class='time-left'>"+time.getHours()+":"+prefix+time.getMinutes()+""+suffix+"</span></div>";
                cr.scrollTop = cr.scrollHeight;
            }
            
            function showAdmin(){
                var table=document.getElementById("body");
                table.innerHTML="";
                
                for(var i=0; i<req.response.length; i++){
                    users.push(req.response[i]);
                    var row=document.createElement("tr");
                    var num=document.createElement("td");
                    var txt=document.createTextNode(i);
                    num.appendChild(txt);
                    row.appendChild(num);
                    var uName=document.createElement("td");
                    var txt1=document.createTextNode(req.response[i].username);
                    uName.appendChild(txt1);
                    row.appendChild(uName);
                    var passwd=document.createElement("td");
                    var txt2=document.createTextNode(req.response[i].password);
                    passwd.appendChild(txt2);
                    row.appendChild(passwd);
                    var uType=document.createElement("td");
                    var txt3=document.createTextNode(req.response[i].type);
                    uType.appendChild(txt3);
                    row.appendChild(uType);
                    table.appendChild(row);
                }
                ap.style.visibility="visible";
            }
		</script>
	</head>
	<body>
		<div class="navbar">
            <a href="">Tech Talk</a>
            <button id="logout" onclick="location.reload();"> Logout</button>
            <button id="cngpsswd"> Change My Password</button>
            <button id="admin" onclick="getAdmin();"> Admin Portal</button>
            <p>Instant Messenging for Hiram CPSC Students</p>
        </div>
        <br>
         <div id="login">
            <form>
                Username: <input type="text" name="username" id="username">
                Password: <input type="password" name="password" id="password">
                <input type="button" value="login" onclick="signin(); this.form.reset();">
            </form>
        </div>
        <div id="retry">
            <p>Try that again<p>
        </div>
		<div id="chat-room">   
		</div>
		<br><br><br>
		<div id="message-form">
			<form action="https://cs.hiram.edu/~italianoaj/rest/sendMessage" method="POST">
				<textarea id="message" rows="8"  placeholder="Type your message here..."></textarea>
				<input type="button" value="SEND" onclick="send(this.form); this.form.reset();">
                <input type="button" value="HELP" onclick="help();">
			</form>
		</div>
        <div id="admin-portal">
            <h1>Admin Portal</h1>
            <table>
                <thead>
                    <th>Number</th>
                    <th>User</th>
                    <th>Password</th>
                    <th>Type</th>
                </thead>
                <tbody id="body">
                </tbody>
            </table>
            <button id="dUser" onclick="delUser()">Delete Account</button>
            <button id="aUser" onclick="makeUser()">Create Account</button>
        </div>
	</body>
</html>
